{"version":3,"sources":["components/menu.js","firebase/firebase.js","components/header.js","App.js","serviceWorker.js","index.js"],"names":["Menu","_ref","nameFood","priceFood","add","react_default","a","createElement","ListGroupItem","class","onClick","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","header","Row","Col","xs","Jumbotron","className","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onCollectionUpdate","querySnapshot","forEach","doc","setState","food","data","handleClick","firestore","collection","userName","state","countTotal","list","handleChange","e","typefood","target","name","handleAddItem","priceItem","nameNow","find","id","item","count","price","sumTotalOrder","push","deleteOrder","index","splice","parseInt","sum","_ref2","value","ref","unsubscribe","onSnapshot","_this2","_this$state","size","keys","Container","sm","Button","ListGroup","length","map","_ref3","menu","key","Input","placeholder","type","onChange","Table","hover","scope","_ref4","i","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","App_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"qNAkBeA,EAfD,SAAAC,GAAmC,IAAhCC,EAAgCD,EAAhCC,SAAWC,EAAqBF,EAArBE,UAAWC,EAAUH,EAAVG,IACrC,OACEC,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,MAAM,WAChBJ,EAAAC,EAAAC,cAAA,OAAKE,MAAQ,aAAb,IAA2BP,EAA3B,MACDG,EAAAC,EAAAC,cAAA,OAAKE,MAAQ,aAAb,OAA8BN,EAA9B,OACAE,EAAAC,EAAAC,cAAA,OAAKE,MAAQ,aAAb,IAA0BJ,EAAAC,EAAAC,cAAA,KAAGE,MAAM,cAAcC,QAAS,kBAAKN,EAAIF,EAAUC,EAAUD,mBCG1FS,gBARe,CACbC,OAAQ,0CACNC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,iBAIvBN,cAAqBO,SAZJ,CAACC,uBAAuB,IAc1BR,mCCfAS,EAAA,WACX,OACHf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACGhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAKC,GAAG,MACLlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACFnB,EAAAC,EAAAC,cAAA,MAAIkB,UAAU,aAAd,kBAAyCpB,EAAAC,EAAAC,cAAA,KAAGE,MAAM,gFCDlCiB,cACrB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAWVQ,mBAAqB,SAACC,GAClBA,EAAcC,QAAQ,SAACC,GACrBV,EAAKW,SAAS,CACVC,KAAKF,EAAIG,YAfAb,EAqBnBc,YAAc,WACd/B,EAASgC,YAAYC,WAAW,UAAUxC,IAAI,CAC1CyC,SAAUjB,EAAKkB,MAAMD,SACrBE,WAAYnB,EAAKmB,WACjBC,KAAKpB,EAAKkB,MAAME,QAzBDpB,EA4BnBqB,aAAe,SAACC,GACZtB,EAAKW,SAAS,CACZY,SAAUD,EAAEE,OAAOC,QA9BNzB,EAiCnB0B,cAAgB,SAACD,EAAME,EAAWC,GAClC,IAAMR,EAAOpB,EAAKkB,MAAME,KACpBA,EAAKS,KAAK,SAAAxD,GAAA,OAAAA,EAAGyD,KAAgBF,KAE9BR,EAAKX,QAAQ,SAAAsB,GACTA,EAAKD,KAAOF,IACXG,EAAKC,QACLD,EAAKE,MAAQN,EAAYI,EAAKC,SAEpChC,EAAKkC,cAAcd,KAGrBA,EAAKe,KAAK,CACFJ,KAAMN,EACNQ,MAAON,EACPG,GAAIF,EACJI,MAAO,IAEZZ,EAAKX,QAAQ,SAAAsB,GACJA,EAAKD,KAAOF,IACVG,EAAKE,MAAQN,EAAYI,EAAKC,SAEtChC,EAAKkC,cAAcd,KAvDNpB,EAyDnBoC,YAAc,SAACC,EAASJ,GACTjC,EAAKkB,MAAME,KACnBkB,OAAOD,EAAO,GACnBrC,EAAKW,SAAS,CAAEQ,WAAanB,EAAKmB,WAAaoB,SAASvC,EAAKiC,UA5D5CjC,EA8DnBkC,cAAgB,SAACd,GACd,IAAIoB,EAAM,EACVpB,EAAKX,QAAQ,SAAAgC,GAAA,IAAGR,EAAHQ,EAAGR,MAAH,OAAeO,GAAOP,IACpCjC,EAAKmB,WAAaqB,EAClBxC,EAAKW,SAAS,CAACS,KAAKA,EAAOD,WAAanB,EAAKmB,WAAaoB,SAASvC,EAAKiC,UAlEvDjC,EAoEnBiB,SAAW,SAACK,GACXtB,EAAKW,SAAS,CACVM,SAAUK,EAAEE,OAAOkB,SApEpB1C,EAAK2C,IAAM5D,EAASgC,YAAYC,WAAW,QAC3ChB,EAAK4C,YAAc,KACnB5C,EAAKkB,MAAQ,CACXN,KAAM,GACNW,SAAU,YACVN,SAAU,GACVE,WAAY,EACZC,KAAM,IATOpB,mFAmBfG,KAAKyC,YAAczC,KAAKwC,IAAIE,WAAW1C,KAAKI,qDAsDvC,IAAAuC,EAAA3C,KAAA4C,EAC4B5C,KAAKe,MAA9BK,EADHwB,EACGxB,SAAUX,EADbmC,EACanC,KAAMQ,EADnB2B,EACmB3B,KAClB4B,EAAO/C,OAAOgD,KAAKrC,GAC3B,OACEnC,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAWrE,MAAM,mBAChBJ,EAAAC,EAAAC,cAACa,EAAD,MACDf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAKyD,GAAG,IACN1E,EAAAC,EAAAC,cAAA,OAAKE,MAAM,UACZJ,EAAAC,EAAAC,cAAA,OAAKE,MAAQ,OAAb,IAAoBJ,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAS3B,KAAK,YAAa3C,QAASqB,KAAKkB,cAAzC,aACpB5C,EAAAC,EAAAC,cAAA,OAAKE,MAAQ,OAAMJ,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQ3B,KAAK,SAAU3C,QAASqB,KAAKkB,cAArC,YAAnB,QAIH5C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACChB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAKyD,GAAG,KACP1E,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,KACUL,EAAKM,OACH1C,EAAKW,GAAUgC,IAAI,SAAAC,GAAA,IAAGzB,EAAHyB,EAAGzB,KAAME,EAATuB,EAASvB,MAAT,OACjBxD,EAAAC,EAAAC,cAAC8E,EAAD,CAAMnF,SAAUyD,EAAMxD,UAAW0D,EAAOyB,IAAK3B,EAC3CvD,IAAKsE,EAAKpB,kBACZ,OAGfjD,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAKyD,GAAG,KACR1E,EAAAC,EAAAC,cAAA,OAAKE,MAAM,UACXJ,EAAAC,EAAAC,cAAA,OAAKE,MAAO,YACZJ,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAOC,YAAY,SAASC,KAAK,OAAOC,SAAU3D,KAAKc,SAAUyB,MAAOvC,KAAKc,YAE7ExC,EAAAC,EAAAC,cAAA,OAAKE,MAAQ,YACbJ,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQtE,QAASqB,KAAKW,aAAtB,YAGCrC,EAAAC,EAAAC,cAAA,WACDF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOC,OAAK,GACTvF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIsF,MAAM,OAAV,YACAxF,EAAAC,EAAAC,cAAA,MAAIsF,MAAM,OAAV,UACAxF,EAAAC,EAAAC,cAAA,MAAIsF,MAAM,OAAV,cAGFxF,EAAAC,EAAAC,cAAA,aACCyC,EAAKmC,IAAI,SAAAW,EAA0BC,GAA1B,IAAGpC,EAAHmC,EAAGnC,KAAME,EAATiC,EAASjC,MAAOD,EAAhBkC,EAAgBlC,MAAhB,OACVvD,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAAA,cAAMoD,GACNtD,EAAAC,EAAAC,cAAA,gBAASsD,GACTxD,EAAAC,EAAAC,cAAA,UAAMqD,EAAN,MACAvD,EAAAC,EAAAC,cAAA,UAAKF,EAAAC,EAAAC,cAAA,KAAGkB,UAAU,eAAef,QAAS,kBAAMgE,EAAKV,YAAY+B,EAAEpC,EAAKD,GAAGG,MAA3E,QAEHxD,EAAAC,EAAAC,cAAA,UACLF,EAAAC,EAAAC,cAAA,mBACQF,EAAAC,EAAAC,cAAA,iBAASwB,KAAKgB,YACN1C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,wBAjIcyF,aCM3BC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlE,QACf4D,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,gHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,SAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KCrFjEC,IAASC,OAAOtH,EAAAC,EAAAC,cAACqH,EAAD,MAASC,SAASC,eAAe,SDc1C,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,wCAAwB7B,OAAOC,UAC3C6B,SAAW9B,OAAOC,SAAS6B,OAIvC,OAGF9B,OAAO+B,iBAAiB,OAAQ,WAC9B,IAAM1B,EAAK,GAAA2B,OAAMH,wCAAN,sBAEP/B,GA6DV,SAAiCO,EAAOC,GAEtC2B,MAAM5B,GACHK,KAAK,SAAAwB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C/B,UAAUC,cAAc+B,MAAM7B,KAAK,SAAAC,GACjCA,EAAa6B,aAAa9B,KAAK,WAC7BV,OAAOC,SAASwC,aAKpBrC,EAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEAjFAwB,CAAwBrC,EAAOC,GAI/BC,UAAUC,cAAc+B,MAAM7B,KAAK,WACjCO,QAAQC,IACN,+GAMJd,EAAgBC,EAAOC,MCrC/BE","file":"static/js/main.88e99a81.chunk.js","sourcesContent":["import React from 'react';\nimport {  ListGroupItem } from 'reactstrap';\n\nconst Menu =  ({ nameFood , priceFood, add }) => {\n  return (\n    <div>\n       <ListGroupItem>\n         <div class=\"d-flex \">\n    <div class = ' w-50 p-2'> {nameFood}  </div>\n   <div class = ' w-50 p-2'> s/.{priceFood}   </div>\n   <div class = ' w-50 p-2'> <i class=\"fas fa-plus\" onClick={() =>add(nameFood, priceFood,nameFood)}></i></div>\n </div>\n        </ListGroupItem>\n        \n    </div>\n  );\n};\n\nexport default Menu ;","import * as firebase from 'firebase';\r\n// import firestore from 'firebase/firestore'\r\n\r\nconst settings = {timestampsInSnapshots: true};\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBiLzAl05Fsx4v5xMqsT8_IoWxR1KBmITc\",\r\n    authDomain: \"burguerqueen-92dd7.firebaseapp.com\",\r\n    databaseURL: \"https://burguerqueen-92dd7.firebaseio.com\",\r\n    projectId: \"burguerqueen-92dd7\",\r\n    storageBucket: \"burguerqueen-92dd7.appspot.com\",\r\n    messagingSenderId: \"184843712728\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nfirebase.firestore().settings(settings);\r\n\r\nexport default firebase;\r\n","import React from 'react';\r\nimport {Row,Col,Jumbotron} from 'reactstrap';\r\nexport default ( )=>{\r\n    return(\r\n <Row>\r\n    <Col xs='12'>\r\n       <Jumbotron>\r\n     <h1 className='display-5'>Burguer Queen  <i class=\"fas fa-hamburger\"></i></h1>\r\n        </Jumbotron>\r\n    </Col> \r\n  </Row>\r\n      )\r\n}","import React, { Component } from 'react';\nimport Menu from './components/menu';\nimport firebase from './firebase/firebase';\nimport Header from './components/header'\nimport './App.css';\nimport {Container , Row  , Table ,Col ,Button ,ListGroup , Input} from 'reactstrap'\nexport default class App extends Component {\nconstructor(props) {\n    super(props);\n    this.ref = firebase.firestore().collection('food');\n    this.unsubscribe = null;\n    this.state = {\n      food: {} ,\n      typefood: 'breakfast',\n      userName: '',\n      countTotal: 0,\n      list: []  \n    };\n  }\nonCollectionUpdate = (querySnapshot) => {\n    querySnapshot.forEach((doc) => {\n      this.setState({\n          food:doc.data()\n      }) });    \n  }\ncomponentDidMount() {\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n  }    \nhandleClick = () => {  \nfirebase.firestore().collection('orders').add({\n    userName: this.state.userName,\n    countTotal: this.countTotal,\n    list:this.state.list\n   });  \n  }\nhandleChange = (e) => {\n    this.setState({\n      typefood: e.target.name\n    })\n  } \nhandleAddItem = (name, priceItem, nameNow) => {\nconst list = this.state.list;\nif (list.find(({ id }) => id === nameNow) ) \n {\n   list.forEach(item => {\n   if (item.id === nameNow) {\n        item.count++;\n        item.price = priceItem * item.count; }\n    })\n  this.sumTotalOrder(list);\n} \n else {\nlist.push({\n        item: name,\n        price: priceItem,\n        id: nameNow,\n        count: 1\n      });\n   list.forEach(item => {\n        if (item.id === nameNow) {\n              item.price = priceItem * item.count; }\n         })\n      this.sumTotalOrder(list); }\n   }\ndeleteOrder = (index  , price) => {\n  const list = this.state.list;\n  list.splice(index, 1);\n  this.setState({ countTotal : this.countTotal - parseInt(this.price) }) \n  }  \nsumTotalOrder = (list) => {\n   let sum = 0;\n   list.forEach(({ price }) => sum += price);\n  this.countTotal = sum;\n  this.setState({list:list , countTotal : this.countTotal + parseInt(this.price) }) \n} \nuserName = (e) => {\n this.setState({\n     userName: e.target.value\n    }) \n  } \nrender() {\n    const { typefood, food, list } = this.state;\n    const size = Object.keys(food);\n  return (\n    <Container class='container-fluid'>\n     <Header/>  \n    <Row> \n      <Col sm=\"\">\n        <div class='d-flex'>\n       <div class = 'p-2'> <Button  name=\"breakfast\"  onClick={this.handleChange}>Desayuno</Button></div>\n       <div class = 'p-2'><Button name=\"dinner\"  onClick={this.handleChange}>Almuerzo</Button> </div>\n     </div>\n      </Col>\n    </Row>\n    <br />\n    <Row>\n     <Col sm=\"4\">\n      <ListGroup>\n              { size.length ?\n                  food[typefood].map(({ item, price }) =>\n                    <Menu nameFood={item} priceFood={price} key={item}\n                      add={this.handleAddItem} />)\n                  : null }\n      </ListGroup>\n     </Col>\n     <Col sm=\"8\">\n     <div class='d-flex'>\n     <div class ='w-50 p-2'>\n     <Input placeholder=\"nombre\" type=\"text\" onChange={this.userName} value={this.userName} />\n     </div>\n     <div class = 'w-50 p-2' >      \n     <Button onClick={this.handleClick}>Enviar</Button> \n       </div>\n     </div>\n      <br />\n     <Table hover>\n        <thead>\n        <tr>\n          <th scope=\"col\">Producto</th>\n          <th scope=\"col\">Precio</th>\n          <th scope=\"col\">Cantidad</th>\n        </tr>\n        </thead>\n        <tbody>\n        {list.map(({ item, price, count  }, i) =>\n        <tr >\n           <td> {item}</td>\n           <td >s/.{price}</td>\n           <td >{count}  </td>\n           <td ><i className=\"fas fa-times\" onClick={() => this.deleteOrder(i,item.id,price)}></i> </td> \n        </tr>   )}\n        <tr>\n   <td>Total</td>\n           <td>s/. {this.countTotal}</td>\n                   <td></td>\n                   <td></td>\n           </tr>\n            </tbody>\n      </Table> \n     </Col>      \n    </Row>\n     </Container >\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import firebase from 'firebase';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}